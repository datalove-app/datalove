[workspace]
version = "0.0.1"
resolver = "2"
members = [
  # binaries, uis
  "app/src-ui",
  "app/src-tauri",

  # libs
  "crates/iroh-nats",
  # "crates/runtime",
  # "crates/persona",
  # "crates/persona/core",
  # "crates/persona/methods",
]
exclude = [
]

[workspace.package]
version = "0.0.1"
authors = ["sunny-g"]
license = "MIT OR Apache-2.0"
homepage = "https://github.com/datalove-app/datalove"
repository = "https://github.com/datalove-app/datalove"
readme = "./README.md"
keywords = ["p2p", "webassembly"]
edition = "2021"
rust-version = "1.75"

[workspace.dependencies]
# self
iroh-nats = { path = "crates/iroh-nats" }

# general
anyhow = { version = "1.0", default-features = false }
# async-wormhole = { version = "0.3.7", default-features = false }
bytemuck = { version = "1.14", default-features = false }
bytes = { version = "1.5", default-features = false }
# coerce = { version = "0.8", default-features = false }
dirs = { version = "5.0", default-features = false }
futures = { version = "0.3", default-features = false }
# futures-channel = { version = "0.3", default-features = false }
# futures-util = { version = "0.3", default-features = false }
# hex = { version = "0.4", default-features = false }
memchr = { version = "2.7", default-features = false }
serde = { version = "1.0", default-features = false }
serde_json = { version = "1.0", default-features = false }
thiserror = { version = "1.0", default-features = false }
tokio = { version = "1.36", default-features = false }
tower = { version = "0.4", default-features = false }
tracing = { version = "0.1", default-features = false }
tracing-futures = { version = "0.2", default-features = false }
tracing-subscriber = { version = "0.3", default-features = false }
tracing-subscriber-wasm = { version = "0.1", default-features = false }

# wasm
wasm_component_layer = { version = "0.1.15", default-features = false }
wasm_runtime_layer = { version = "0.2", default-features = false }
wasm-bindgen = { version = "0.2", default-features = false }
wasm-bindgen-futures = { version = "0.4", default-features = false }
wit-bindgen = { version = "0.17", default-features = false }
wit-bindgen-rust = { version = "0.17", default-features = false }
wit-deps = { version = "0.3", default-features = false }

# wasmer = { version = "4.2", default-features = false }
# wasmer-wasix = { version = "0.14", default-features = false }
# wasmer-wasix-experimental-io-devices = { version = "0.14", default-features = false }
# # wai
# wai-bindgen-rust = { version = "0.2.3", default-features = false }
# wai-bindgen-wasmer = { version = "0.14", default-features = false }
# wasm-bpf-rs = { path = "vendor/wasm-bpf/runtime/wasm-bpf-rs" }

# p2p
iroh = { version = "0.12", default-features = false }
iroh-gossip = { version = "0.12", default-features = false }
iroh-net = { version = "0.12", default-features = false }

# crypto, zk
borsh = { version = "1.2", default-features = false }
cid = { version = "0.10", default-features = false }
crypto-bigint = { version = "0.5", default-features = false, features = [] }
digest = { version = "0.10", default-features = false }
ed25519-dalek = { version = "2.1", default-features = false }
# k256 = { git = "https://github.com/risc0/rustcrypto-elliptic-curves", branch = "risc0" }
# pqc_kyber = {version = "0.7.1", default-features = false }
merkle-log = { version = "0.0.9", default-features = false }
rand = { version = "0.8", default-features = false }
sha2 = { version = "0.10", default-features = false }
signature = { version = "2.2", default-features = false }
# veilid-core = { version = "0.2.3", default-features = false, features = [
#   "enable-crypto-vld0",
#   "rt-tokio",
# ] }
zeroize = { version = "1.7", default-features = false }

risc0-build = { version = "0.20.0-alpha.1", default-features = false }
risc0-zkp = { version = "0.20.0-alpha.1", default-features = false }
risc0-zkvm = { version = "0.20.0-alpha.1", default-features = false }

# util
clap = { version = "4.5.0", default-features = false }

[patch.crates-io]
# merkle-log = { path = "vendor/merkle-log" }
# rusqlite = { version = "0.29", default-features = false, features = ["bundled-sqlcipher"] }

# app
# blitz = { path = "vendor/blitz" }
# blitz-core = { path = "vendor/blitz/blitz-core" }

# dioxus = { git = "https://github.com/dioxuslabs/dioxus" }
# dioxus-html = { git = "https://github.com/dioxuslabs/dioxus" }
# dioxus-native-core = { git = "https://github.com/dioxuslabs/dioxus" }
# dioxus-router = { git = "https://github.com/dioxuslabs/dioxus" }

# makepad-widgets = { path = "vendor/makepad/widgets" }
# makepad-micro-serde = { path = "vendor/makepad/libs/micro_serde" }
# makepad-micro-serde-derive = { path = "vendor/makepad/libs/micro_serde/derive" }

# risc0-build = { path = "vendor/risc0/risc0/build" }
# risc0-circuit-recursion = { path = "vendor/risc0/risc0/circuit/recursion" }
# risc0-circuit-rv32im = { path = "vendor/risc0/risc0/circuit/rv32im" }
# risc0-zkp = { path = "vendor/risc0/risc0/zkp" }
# risc0-zkvm = { path = "vendor/risc0/risc0/zkvm" }

# veilid-core = { path = "vendor/veilid/veilid-core" }

# # wasm
# wasmer = { path = "rust/packages/wasmer/lib/api" }
# wasmer-types = { path = "rust/packages/wasmer/lib/types" }
# wasmer-wasix = { path = "rust/packages/wasmer/lib/wasix" }
# wasmer-wasix-experimental-io-devices = { path = "rust/packages/wasmer/lib/wasi-experimental-io-devices" }
# wasmer-wasix-types = { path = "rust/packages/wasmer/lib/wasi-types" }
# # wai
# wai-bindgen-rust = { path = "rust/packages/wai/crates/rust-wasm" }
# wai-bindgen-rust-impl = { path = "rust/packages/wai/crates/rust-wasm-impl" }
# wai-bindgen-wasmer = { path = "rust/packages/wasmer/lib/wai-bindgen-wasmer" }
# wai-bindgen-gen-wasmer = { path = "rust/packages/wai/crates/gen-wasmer" }
# wai-bindgen-wasmer-impl = { path = "rust/packages/wai/crates/wasmer-impl" }

# wasm-bindgen = { path = "rust/packages/wasm-bindgen" }
# wasi-crypto = { path = "vendor/wasi-crypto/implementations/hostcalls/rust" }

# wgpu = { path = "rust/runtime/components/wgpu/wgpu/wgpu" }
# wgpu-core = { path = "rust/runtime/components/wgpu/wgpu/wgpu-core" }
# wgpu-hal = { path = "rust/runtime/components/wgpu/wgpu/wgpu-hal" }
# wgpu-types = { path = "rust/runtime/components/wgpu/wgpu/wgpu-types" }
# wgpu-native = { path = "rust/packages/wgpu-native" }

# [patch.'https://github.com/sunny-g/wgpu']
# wgpu = { path = "rust/runtime/components/wgpu/wgpu/wgpu" }
# wgpu-core = { path = "rust/runtime/components/wgpu/wgpu/wgpu-core" }
# wgpu-hal = { path = "rust/runtime/components/wgpu/wgpu/wgpu-hal" }
# wgpu-types = { path = "rust/runtime/components/wgpu/wgpu/wgpu-types" }

# [patch.'https://github.com/gfx-rs/wgpu-native']
# wgpu-native = { path = "rust/packages/wgpu-native" }

# [profile.dev]
# opt-level = 3

# [profile.dev-build-override]
# opt-level = 3

# [profile.release]
# debug = 1
# lto = true

# [profile.release.build-override]
# opt-level = 3
